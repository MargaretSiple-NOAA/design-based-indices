[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 gapindex authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/background_equations.html","id":"data-collection-process","dir":"Articles","previous_headings":"","what":"Data Collection Process","title":"Background: Mathematical Methods","text":"station (indexed \\(j\\)) contained stratum (indexed \\(\\)), total catch weight numbers recorded fish invertebrate taxa estimation total biomass abundance. subset fish invertebrate taxa, lengths either individuals subsample representative individuals recorded estimation size composition. Individuals second level subsampling length subsample aged calculation age-length key, used expand length subsample complete length- age-distribution sampled area.","code":""},{"path":"/articles/background_equations.html","id":"catch-rates","dir":"Articles","previous_headings":"","what":"Catch Rates","title":"Background: Mathematical Methods","text":"trawl catch weights numbers standardized using area swept trawl, \\(E_{ij}\\), station \\(j\\) stratum \\(\\). \\(W_{ijk}\\) total catch weight taxon \\(k\\) station \\(j\\) stratum \\(\\). \\(R_{ijk}\\) total catch weight per area swept (also known “weight-CPUE”, units \\(kg/km^2\\)) taxon \\(k\\) station \\(j\\) stratum \\(\\): \\[R_{ijk} = \\frac{W_{ijk}}{E_{ij}}\\] \\(N_{ijk}\\) total numerical catch taxon \\(k\\) station \\(j\\) stratum \\(\\) enumerated either directly every individual caught trawl sample expanded representative subsample individuals. case subsample taken, expanded total numerical catch \\((\\hat N_{ijk})\\) estimated dividing total catch weight mean individual weight \\(h_{ijk}\\): \\[\\hat N_{ijk} = \\frac{W_{ijk}}{\\hat h_{ijk}}\\] \\[h_{ijk} = \\frac{w_{ijk}}{s_{ijk}}\\] \\(w_{ijk}\\) \\(s_{ijk}\\) total subsampled weight numbers taxon \\(k\\) station \\(j\\) stratum \\(\\). estimate numerical catch per area trawled (also known “numerical CPUE”, units \\(/km^2\\)) calculated similar weight-CPUE: \\[\\hat S_{ijk} = \\frac{\\hat N_{ijk}}{E_{ij}}\\]","code":""},{"path":"/articles/background_equations.html","id":"biomass-and-abundance-calculations","dir":"Articles","previous_headings":"","what":"Biomass and Abundance Calculations","title":"Background: Mathematical Methods","text":"Total estimated biomass abundance (associated estimated variances) taxon \\(k\\) stratum \\(\\) product average CPUE area stratum \\(\\) (\\(A_i\\)): \\[\\hat B_{ik} = A_i \\bar R_{ik}\\] \\[\\bar R_{ik} = \\frac{\\sum_{j = 1}^{n_i} R_{ijk}}{n_i}\\] estimated variance: \\[\\hat{Var}(\\hat B_{ik}) = A_i^2 \\hat{Var}(\\bar R_{ik})\\] \\[\\hat{Var} (\\bar R_{ik}) = \\frac{\\sum\\limits_{j=1}^{n_i} (R_{ijk} - \\bar R_{ik})^2 }{n_i(n_i-1)}\\] Since strata independent, total biomass variance estimates across subarea entire survey region calculated sum stratum-level estimates total biomass variance estimates, respectively, contained within subarea region. example, total estimated biomass entire survey area : \\[\\hat B_{k} = \\sum\\limits_{=1}^\\hat B_{ik}\\] \\(\\) total number strata, estimated variance: \\[Var(\\hat B_{k}) = \\sum\\limits_{=1}^Var(\\hat B_{ik})\\] Total abundance (\\(\\hat P_{k}\\)) calculated similar total biomass, replacing weight-CPUE numerical CPUE.","code":""},{"path":"/articles/background_equations.html","id":"size-composition","dir":"Articles","previous_headings":"","what":"Size Composition","title":"Background: Mathematical Methods","text":"subset taxa, individuals (subsampled individuals) taxon \\(k\\) station \\(j\\) stratum \\(\\) lengthed nearest 1-cm bin (indexed \\(l\\)) classified sex, indexed \\(m\\) 1 = Male, 2 = Female, 3 = Unsexed (\\(s_{ijklm}\\)). recording unsexed individuals occurs either sex individual determined sex individual collected. calculation size composition comes two expansions. First, proportion observed individuals sex \\(m\\) length bin \\(l\\) taxon \\(k\\) station \\(j\\) stratum \\(\\) (\\(z_{ijklm}\\)) used expand length-frequency subsample total numbers individuals per area swept (\\(\\hat S_{ijk}\\)) calculate estimated number per area swept individuals sex \\(m\\) length bin \\(l\\) taxon \\(k\\) station \\(j\\) stratum \\(\\) (\\(\\hat S_{ijklm}\\)). \\[z_{ijklm} = \\frac{s_{ijklm}} {\\sum\\limits_{m=1}^3\\sum\\limits_{l=1}^{L_{ijkm}} s_{ijklm} }\\] \\[\\hat S_{ijklm} = \\hat S_{ijk} z_{ijklm}\\] \\(L_{ijkm}\\) maximum length bin observed taxon \\(k\\), sex \\(m\\) station \\(j\\) stratum \\(\\). Second, \\(\\hat S_{ijklm}\\) expanded total estimated stratum-level numerical abundance calculate estimated number individuals sex \\(m\\) length bin \\(l\\) taxon \\(k\\) stratum \\(\\) (\\(\\hat P_{iklm}\\)) \\[\\hat P_{iklm} = \\hat P_{ik} \\frac{\\sum\\limits_{j=1}^{n_i} \\hat S_{ijklm}} {\\sum\\limits_{j=1}^{n_i}\\sum\\limits_{m=1}^3\\sum\\limits_{l=1}^{L} \\hat S_{ijklm} }\\] Bering Sea survey regions, hauls associated length-frequency data included size composition calculations. GOA AI “average size composition” \\(\\bar z_{iklm}\\) computed using hauls stratum year used impute size composition haul: \\[ \\bar z_{iklm} = \\frac{\\sum\\limits_{j=1}^{n_i} s_{ijklm}}{\\sum\\limits_{m=1}^{3}\\sum\\limits_{l=1}^{L_{ikm}}\\sum\\limits_{j=1}^{n_i} s_{ijklm}}\\]","code":""},{"path":"/articles/background_equations.html","id":"age-composition","dir":"Articles","previous_headings":"","what":"Age Composition","title":"Background: Mathematical Methods","text":"Within haul, second subsample drawn length subsample collect otoliths determining individual age, indexed \\(x\\). number observed individuals age \\(x\\), sex \\(m\\), length bin \\(l\\), taxon \\(k\\), station \\(j\\) stratum \\(\\) \\(v_{ijklmx}\\). age-length key characterizing proportion ages taxon \\(k\\), length bin \\(l\\), sex \\(m\\) created pooling age data across stations strata within given survey region (\\(y_{klmx}\\)). \\[y_{klmx} = \\frac{v_{klmx}} {\\sum\\limits_{x=1}^X_{klm} v_{klmx}}\\] \\(X_{klm}\\) oldest age taxon \\(k\\) length bin \\(l\\) sex \\(m\\). age-length key used transform size compositions age compositions, total number individuals age \\(x\\), sex \\(m\\), taxon \\(k\\) stratum \\(\\) \\((\\hat Y_{ikmx})\\). \\[\\hat Y_{iklmx} = \\hat P_{iklm}y_{klmx}\\] \\[\\hat Y_{ikmx} = \\sum\\limits_{l = 1}^{L_{ikm}}\\hat Y_{iklmx}\\] estimated mean length (mm) age \\(x\\) sex \\(m\\) taxon \\(k\\) stratum \\(\\) \\((\\bar d_{ikmx})\\) weighted average length using distribution \\(\\hat Y_{iklmx}\\) across length bins weights. \\[\\bar d_{ikmx} = \\frac{\\hat Y_{iklmx}d_l}{\\sum\\limits_{l=1}^{L_{ijkm}} \\hat Y_{iklmx}}\\] \\(d_l\\) length value associated length bin \\(l\\), estimated weighted variance: \\[\\hat {Var}(\\bar d_{ikmx}) = \\sum\\limits_{l=1}^{L_{ijkm}} (\\frac{\\hat Y_{iklmx}}{\\sum\\limits_{l=1}^L \\hat Y_{iklmx}} (d_l - \\bar d_{ikmx})^2)\\]","code":""},{"path":"/articles/ex_species_complex.html","id":"equivalent-tables","dir":"Articles","previous_headings":"","what":"Equivalent Tables:","title":"Example: Production Run with Species Complexes","text":"HAEHNR.CPUE_EBS_PLUSNW_GROUPED: production_cpue HAEHNR.BIOMASS_EBS_PLUSNW_GROUPED: production_biomass HAEHNR.SIZECOMP_EBS_PLUSNW_GROUPED: production_sizecomp","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zack Oyafuso. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Oyafuso Z (2024). gapindex: Standard AFSC GAP Product Calculations. R package version 2.1.2.","code":"@Manual{,   title = {gapindex: Standard AFSC GAP Product Calculations},   author = {Zack Oyafuso},   year = {2024},   note = {R package version 2.1.2}, }"},{"path":"/index.html","id":"welcome","dir":"","previous_headings":"","what":"Welcome","title":"Standard AFSC GAP Product Calculations","text":"R package generates standard design-based indices biomass, abundance, size composition, age composition NOAA-NMFS-AFSC-RACE-GAP bottom trawl survey data. Survey regions include: Gulf Alaska (1993), Aleutian Islands (1991), Eastern Bering Sea Shelf (1982), Eastern Bering Sea Slope (2002), Northern Bering Sea Shelf (2010).","code":""},{"path":"/index.html","id":"installation-instructions","dir":"","previous_headings":"","what":"Installation Instructions","title":"Standard AFSC GAP Product Calculations","text":"Make sure installed R packages devtools, RODBC, getPass connected AFSC network VPN using package.","code":"library(devtools) devtools::install_github(\"afsc-gap-products/gapindex\")"},{"path":"/index.html","id":"collaborators","dir":"","previous_headings":"","what":"Collaborators","title":"Standard AFSC GAP Product Calculations","text":"gapindex R package product two AFSC-RACE-GAP working groups regarding GAP data processes index computation. Many thanks participated working groups:","code":""},{"path":"/index.html","id":"legacy","dir":"","previous_headings":"","what":"Legacy","title":"Standard AFSC GAP Product Calculations","text":"non-exhaustive list people provided foundation many functions package: AI-GOA: Michael Martin, Peter Munro, Ned Laman Bering Sea: REM, Jason Conner, Jerry Hoff, Rebecca Haehn Many index calculations Wakabayashi et al. (1985): Wakabayashi, K., R. G. Bakkala, M. S. Alton. 1985. Methods U.S.-Japan demersal trawl surveys, p. 7-29. R. G. Bakkala K. Wakabayashi (editors), Results cooperative U.S.-Japan groundfish investigations Bering Sea May-August 1979. Int. North Pac. Fish. Comm. Bull. 44.","code":""},{"path":"/index.html","id":"acronymns","dir":"","previous_headings":"","what":"Acronymns","title":"Standard AFSC GAP Product Calculations","text":"NOAA: National Oceanic Atmospheric Administration NMFS: National Marine Fisheries Service AFSC: Alaska Fisheries Science Center RACE: Resource Assessment Conservation Engineering Division GAP: Groundfish Assessment Program","code":""},{"path":"/index.html","id":"legal-disclaimer","dir":"","previous_headings":"","what":"Legal disclaimer","title":"Standard AFSC GAP Product Calculations","text":"repository software product official communication National Oceanic Atmospheric Administration (NOAA), United States Department Commerce (DOC). NOAA GitHub project code provided ‘’ basis user assumes responsibility use. claims DOC DOC bureaus stemming use GitHub project governed applicable Federal law. reference specific commercial products, processes, services service mark, trademark, manufacturer, otherwise, constitute imply endorsement, recommendation, favoring DOC. DOC seal logo, seal logo DOC bureau, shall used manner imply endorsement commercial product activity DOC United States Government.","code":""},{"path":"/reference/calc_ALK.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate age-length key (alk) — calc_alk","title":"Calculate age-length key (alk) — calc_alk","text":"Calculates empircal probability age length collected otolith data.","code":""},{"path":"/reference/calc_ALK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate age-length key (alk) — calc_alk","text":"","code":"calc_alk(racebase_tables = NULL, unsex = c(\"all\", \"unsex\")[2], global = TRUE)"},{"path":"/reference/calc_ALK.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate age-length key (alk) — calc_alk","text":"racebase_tables data object created gapindex::get_data(). unsex string, option determine unsexed individuals treated. Option \"\" means unsexed alks determined combining sexes (males, females, unsexed) option used standard design-based composition production. Option \"unsex\" means unsexed alk determined unsexed individuals option used creating data inputs model-based age composition indices. Defaults \"unsex\" global boolean. missing length bins filled using alk consisting years? Defaults TRUE.","code":""},{"path":"/reference/calc_ALK.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate age-length key (alk) — calc_alk","text":"dataframe probabilities (\"AGE_FRAC\") ages (\"AGE\") length (LENGTH_MM) given survey (\"SURVEY\"), year (\"YEAR\"), species (SPECIES_CODE), sex (SEX).","code":""},{"path":"/reference/calc_agecomp_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate region-level age composition and mean/std.dev length at age — calc_agecomp_region","title":"Calculate region-level age composition and mean/std.dev length at age — calc_agecomp_region","text":"Calculate region-level age composition mean/std.dev length age","code":""},{"path":"/reference/calc_agecomp_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate region-level age composition and mean/std.dev length at age — calc_agecomp_region","text":"","code":"calc_agecomp_region(racebase_tables, age_comps_stratum)"},{"path":"/reference/calc_agecomp_region.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate region-level age composition and mean/std.dev length at age — calc_agecomp_region","text":"racebase_tables data object created `gapindex::get_data()`` age_comps_stratum named list stratum age comps numbers survey/year/stratum/sex/length, result object gapindex::calc_agecomp_stratum().","code":""},{"path":"/reference/calc_agecomp_region.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate region-level age composition and mean/std.dev length at age — calc_agecomp_region","text":"dataframe age composition mean/standard deviation length age aggregated across regions.","code":""},{"path":"/reference/calc_agecomp_stratum.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate stratum-level age composition and mean/std.dev length at age — calc_agecomp_stratum","title":"Calculate stratum-level age composition and mean/std.dev length at age — calc_agecomp_stratum","text":"Calculate stratum-level age composition mean/std.dev length age","code":""},{"path":"/reference/calc_agecomp_stratum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate stratum-level age composition and mean/std.dev length at age — calc_agecomp_stratum","text":"","code":"calc_agecomp_stratum(racebase_tables = NULL, alk = NULL, size_comp = NULL)"},{"path":"/reference/calc_agecomp_stratum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate stratum-level age composition and mean/std.dev length at age — calc_agecomp_stratum","text":"racebase_tables data object created gapindex::get_data() alk age-length key (dataframe) created gapindex::calc_alk() size_comp dataframe size compositions created gapindex::calc_sizecomp_stratum().","code":""},{"path":"/reference/calc_agecomp_stratum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate stratum-level age composition and mean/std.dev length at age — calc_agecomp_stratum","text":"named list two elements. \"age_comp\" dataframe numbers age survey, year, stratum, species, sex. table column name descriptions coming soon.\"length_at_age\" support table gapindex::calc_agecomp_region() function used.","code":""},{"path":"/reference/calc_biomass_stratum.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate index of total biomass per stratum — calc_biomass_stratum","title":"Calculate index of total biomass per stratum — calc_biomass_stratum","text":"Calculate index total biomass per stratum","code":""},{"path":"/reference/calc_biomass_stratum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate index of total biomass per stratum — calc_biomass_stratum","text":"","code":"calc_biomass_stratum(racebase_tables = NULL, cpue = NULL)"},{"path":"/reference/calc_biomass_stratum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate index of total biomass per stratum — calc_biomass_stratum","text":"racebase_tables data object created gapindex::get_data() cpue object created gapindex::calc_cpue().","code":""},{"path":[]},{"path":"/reference/calc_biomass_subarea.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate index of total biomass across aggregated subareas — calc_biomass_subarea","title":"Calculate index of total biomass across aggregated subareas — calc_biomass_subarea","text":"Calculate index total biomass across aggregated subareas","code":""},{"path":"/reference/calc_biomass_subarea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate index of total biomass across aggregated subareas — calc_biomass_subarea","text":"","code":"calc_biomass_subarea(racebase_tables = NULL, biomass_strata = NULL)"},{"path":"/reference/calc_biomass_subarea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate index of total biomass across aggregated subareas — calc_biomass_subarea","text":"racebase_tables data object created `gapindex::get_data()`` biomass_strata dataframe stratum biomass, result object gapindex::calc_biomass_stratum()","code":""},{"path":[]},{"path":"/reference/calc_cpue.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate CPUEs at haul level — calc_cpue","title":"Calculate CPUEs at haul level — calc_cpue","text":"function zero-fills catch data converts numbers weights CPUE.","code":""},{"path":"/reference/calc_cpue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate CPUEs at haul level — calc_cpue","text":"","code":"calc_cpue(racebase_tables = NULL)"},{"path":"/reference/calc_cpue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate CPUEs at haul level — calc_cpue","text":"racebase_tables data object created gapindex::get_data()","code":""},{"path":[]},{"path":"/reference/calc_sizecomp_stratum.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate numerical CPUE at length by haul — calc_sizecomp_stratum","title":"Calculate numerical CPUE at length by haul — calc_sizecomp_stratum","text":"Uses Equation 16 Wakabayashi et al. 1985 calculate numbers-catch-per-unit-effort (CPUE, Numbers/km2) length.","code":""},{"path":"/reference/calc_sizecomp_stratum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate numerical CPUE at length by haul — calc_sizecomp_stratum","text":"","code":"calc_sizecomp_stratum(   racebase_tables = NULL,   racebase_cpue = NULL,   racebase_stratum_popn = NULL,   spatial_level = c(\"stratum\", \"haul\")[1],   fill_NA_method = c(\"AIGOA\", \"BS\")[1] )"},{"path":"/reference/calc_sizecomp_stratum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate numerical CPUE at length by haul — calc_sizecomp_stratum","text":"racebase_tables data object created gapindex::get_data(). racebase_cpue object created gapindex::calc_cpue(). racebase_stratum_popn object created gapindex::calc_biomass_stratum() spatial_level string, one c(\"stratum\", \"haul\"). size compositions calculated level \"stratum\" (used standard size compositions) \"haul\" (used ModSquad model-based data-inputs). fill_NA_method string, one c(\"AIGOA\", \"BS\"). argument changes way hauls positive weights associated size data dealt . EBS, NBS, BSS survey regions (\"BS\"), hauls contribute dummy length -9 category respective strata. AI GOA survey regions (\"AIGOA\"), average size distribution applied hauls length -9 category exist AI GOA versions size composition.","code":""},{"path":"/reference/calc_sizecomp_stratum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate numerical CPUE at length by haul — calc_sizecomp_stratum","text":"dataframe numerical CPUE (\"S_ijklm_NO_KM2\") survey (\"SURVEY\"), year (\"YEAR\"), stratum (\"STRATUM\"), haul (\"HAULJOIN), species (SPECIES_CODE), sex (SEX), length (LENGTH_MM).","code":""},{"path":"/reference/calc_sizecomp_subarea.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate size composition across aggregated subareas — calc_sizecomp_subarea","title":"Calculate size composition across aggregated subareas — calc_sizecomp_subarea","text":"Calculate size composition across aggregated subareas","code":""},{"path":"/reference/calc_sizecomp_subarea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate size composition across aggregated subareas — calc_sizecomp_subarea","text":"","code":"calc_sizecomp_subarea(racebase_tables, size_comps)"},{"path":"/reference/calc_sizecomp_subarea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate size composition across aggregated subareas — calc_sizecomp_subarea","text":"racebase_tables data object created `gapindex::get_data()`` size_comps dataframe stratum biomass, result object either gapindex::calc_sizecomp_aigoa_stratum() gapindex::calc_sizecomp_bs_stratum()","code":""},{"path":[]},{"path":"/reference/gapindex-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gapindex: Standard AFSC GAP Product Calculations — gapindex-package","title":"gapindex: Standard AFSC GAP Product Calculations — gapindex-package","text":"package contains functions calculate standard data products (CPUE, Biomass, Size Composition, Age Composition) resulting NOAA AFSC GAP summer groundfish bottom trawl survey.","code":""},{"path":"/reference/gapindex-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gapindex: Standard AFSC GAP Product Calculations — gapindex-package","text":"Maintainer: Zack Oyafuso zack.oyafuso@noaa.gov","code":""},{"path":"/reference/get_connected.html","id":null,"dir":"Reference","previous_headings":"","what":"Define RODBC connection to Oracle — get_connected","title":"Define RODBC connection to Oracle — get_connected","text":"Creates RODBC connection Oracle needed pull SQL queries RACE database. Make sure connected VPN running function.","code":""},{"path":"/reference/get_connected.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define RODBC connection to Oracle — get_connected","text":"","code":"get_connected(schema = \"AFSC\")"},{"path":"/reference/get_connected.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define RODBC connection to Oracle — get_connected","text":"schema registered data source name. used dsn argument RODBC::odbcConnect()","code":""},{"path":"/reference/get_connected.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define RODBC connection to Oracle — get_connected","text":"channel class \"RODBC\". See ?RODBC::odbcConnect() detail","code":""},{"path":"/reference/get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull data from RACEBASE — get_data","title":"Pull data from RACEBASE — get_data","text":"Pulls cruise, haul, catch, stratum information region, years, species interest.","code":""},{"path":"/reference/get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull data from RACEBASE — get_data","text":"","code":"get_data(   year_set = c(1996, 1999),   survey_set = c(\"GOA\"),   spp_codes = c(21720, 30060, 10110),   haul_type = 3,   abundance_haul = c(\"Y\", \"N\")[1],   na_rm_strata = FALSE,   sql_channel = NULL,   pull_lengths = FALSE )"},{"path":"/reference/get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull data from RACEBASE — get_data","text":"year_set numeric integer vector years survey_set character string. One c(\"GOA\", \"AI\", \"EBS\", \"NBS\", \"BSS\"). spp_codes two-column dataframe species codes (column name SPECIES_CODE) GROUP name (column name GROUP). single-species, GROUP species codes can . Examples: 1) data.frame(\"SPECIES_CODE\" = c(21720, 21220, 21230, 21232), \"GROUP\" = c(21720, \"Grenadiers\", \"Grenadiers\", \"Grenadiers\")) # taxon groups 2) c(21720, 21740, 10110) # single taxa 3) NULL # species present within combination survey_set year_set haul_type integer. Defaults haul type \"3\" Standard bottom sample (preprogrammed station) used biomass estimation abundance_haul character string. \"Y\" abundance hauls \"N\" hauls. na_rm_strata boolean. Remove hauls NA stratum information. Defaults FALSE. sql_channel connection created via gapindex::get_connected() pull_lengths boolean T/F. lengths specimen data pulled? Defaults FALSE speed.","code":""},{"path":"/reference/get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pull data from RACEBASE — get_data","text":"named list containing survey, cruise, haul, catch, specimen (pull_lengths == TRUE), length (pull_lengths == TRUE), species, stratum information survey, years, species interest.","code":""},{"path":"/reference/get_station_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull station/grid data — get_station_info","title":"Pull station/grid data — get_station_info","text":"Pull station/grid data","code":""},{"path":"/reference/get_station_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull station/grid data — get_station_info","text":"","code":"get_station_info(region = NULL, sql_channel = NULL)"},{"path":"/reference/get_station_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull station/grid data — get_station_info","text":"region Survey region (GOA, AI, EBS) sql_channel connection created via gapindex::get_connected()","code":""},{"path":"/reference/get_station_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pull station/grid data — get_station_info","text":"dataframe containing station information specified survey. request data EBS survey, columns dataframe STATIONID, LATITUDE, LONGITUDE, STRATUM. AI GOA, columns AIGRID_ID, TRAWLABLE, STRATUM, STATIONID, CENTER_LAT, CENTER_LONG, SOUTH_LAT, EAST_LONG, WEST_LONG.","code":""},{"path":"/reference/stitch_entries.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to format sql queries — stitch_entries","title":"Helper function to format sql queries — stitch_entries","text":"Helper function format sql queries","code":""},{"path":"/reference/stitch_entries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to format sql queries — stitch_entries","text":"","code":"stitch_entries(stitch_what = \"\")"},{"path":"/reference/stitch_entries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to format sql queries — stitch_entries","text":"stitch_what string values stitch","code":""},{"path":"/reference/stitch_entries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to format sql queries — stitch_entries","text":"single string encapsulates values stitch_what parenthesis.","code":""},{"path":"/reference/upload_oracle.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload a table to Oracle with associated metadata — upload_oracle","title":"Upload a table to Oracle with associated metadata — upload_oracle","text":"Upload table Oracle associated metadata","code":""},{"path":"/reference/upload_oracle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload a table to Oracle with associated metadata — upload_oracle","text":"","code":"upload_oracle(   x = NULL,   table_name = NULL,   metadata_column = NULL,   table_metadata = NULL,   channel = NULL,   schema = NULL,   share_with_all_users = TRUE )"},{"path":"/reference/upload_oracle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload a table to Oracle with associated metadata — upload_oracle","text":"x Either character string path .csv file data.frame table upload. table_name Name table. (Add error checks make sure table name follows peculiarities Oracle tables). metadata_column data.frame describing metadata fields table. Must contain columns: 1) colname: name field 2) colname_long: longer version name printing purposes. 3) units: units field 4) dataype: Oracle data type 5) colname_desc: Full description field table_metadata Description table . channel Establish oracle connection using function like gapindex::get_connected(). schema character string. name schema save table. share_with_all_users boolean. Default = TRUE. Give users Oracle view permissions.","code":""}]
